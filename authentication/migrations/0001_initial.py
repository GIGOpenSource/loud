# Generated by Django 5.1 on 2025-08-31 06:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(blank=True, help_text='用户昵称', max_length=50, verbose_name='昵称')),
                ('avatar', models.ImageField(blank=True, help_text='用户头像', null=True, upload_to='avatars/', verbose_name='头像')),
                ('phone', models.CharField(blank=True, help_text='手机号码', max_length=11, verbose_name='手机号')),
                ('is_active', models.BooleanField(default=True, help_text='用户是否激活', verbose_name='是否激活')),
                ('is_verified', models.BooleanField(default=False, help_text='用户是否已验证', verbose_name='是否验证')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('last_login_at', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'auth_users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('user_agent', models.TextField(blank=True, verbose_name='用户代理')),
                ('login_method', models.CharField(choices=[('password', '密码登录'), ('token', 'Token登录'), ('oauth', 'OAuth登录')], default='password', max_length=20, verbose_name='登录方式')),
                ('is_successful', models.BooleanField(default=True, verbose_name='是否成功')),
                ('failure_reason', models.CharField(blank=True, max_length=200, verbose_name='失败原因')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='登录时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '登录历史',
                'verbose_name_plural': '登录历史',
                'db_table': 'auth_login_history',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='角色名称', max_length=50, unique=True, verbose_name='角色名称')),
                ('code', models.CharField(help_text='角色代码，用于程序识别', max_length=50, unique=True, verbose_name='角色代码')),
                ('description', models.TextField(blank=True, help_text='角色描述', verbose_name='角色描述')),
                ('is_active', models.BooleanField(default=True, help_text='角色是否激活', verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('permissions', models.ManyToManyField(blank=True, help_text='该角色拥有的权限', to='auth.permission', verbose_name='权限')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'db_table': 'auth_roles',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(blank=True, help_text='用户拥有的角色', to='authentication.role', verbose_name='角色'),
        ),
        migrations.CreateModel(
            name='AuthToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='Token')),
                ('token_type', models.CharField(choices=[('access', '访问令牌'), ('refresh', '刷新令牌')], default='access', max_length=10, verbose_name='Token类型')),
                ('device_info', models.JSONField(blank=True, default=dict, verbose_name='设备信息')),
                ('expires_at', models.DateTimeField(verbose_name='过期时间')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='最后使用时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_tokens', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '认证Token',
                'verbose_name_plural': '认证Token',
                'db_table': 'auth_tokens',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['token'], name='auth_tokens_token_57fade_idx'), models.Index(fields=['user', 'token_type'], name='auth_tokens_user_id_6e4d12_idx'), models.Index(fields=['expires_at'], name='auth_tokens_expires_f09206_idx')],
            },
        ),
    ]
