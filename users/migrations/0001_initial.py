# Generated by Django 5.1 on 2025-08-31 07:16

import base.validators
import django.core.validators
import django.db.models.deletion
import users.profiles.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='是否激活')),
                ('status', models.CharField(choices=[('active', '激活'), ('inactive', '未激活'), ('pending', '待处理'), ('approved', '已批准'), ('rejected', '已拒绝'), ('suspended', '已暂停')], db_index=True, default='active', max_length=20, verbose_name='状态')),
                ('theme', models.CharField(choices=[('light', '浅色主题'), ('dark', '深色主题'), ('auto', '跟随系统')], default='light', help_text='界面主题设置', max_length=20, verbose_name='主题')),
                ('language', models.CharField(choices=[('zh-hans', '简体中文'), ('zh-hant', '繁体中文'), ('en', 'English'), ('ja', '日本語'), ('ko', '한국어')], default='zh-hans', help_text='界面语言设置', max_length=10, verbose_name='语言')),
                ('timezone', models.CharField(default='Asia/Shanghai', help_text='用户所在时区', max_length=50, verbose_name='时区')),
                ('email_notifications', models.BooleanField(default=True, help_text='是否接收邮件通知', verbose_name='邮件通知')),
                ('push_notifications', models.BooleanField(default=True, help_text='是否接收推送通知', verbose_name='推送通知')),
                ('sms_notifications', models.BooleanField(default=False, help_text='是否接收短信通知', verbose_name='短信通知')),
                ('notification_types', models.JSONField(blank=True, default=dict, help_text='各种通知类型的开关设置', verbose_name='通知类型设置')),
                ('show_online_status', models.BooleanField(default=True, help_text='是否向其他用户显示在线状态', verbose_name='显示在线状态')),
                ('allow_friend_requests', models.BooleanField(default=True, help_text='是否允许其他用户发送好友请求', verbose_name='允许好友请求')),
                ('allow_messages_from_strangers', models.BooleanField(default=False, help_text='是否允许非好友用户发送消息', verbose_name='允许陌生人消息')),
                ('auto_save_drafts', models.BooleanField(default=True, help_text='是否自动保存编辑中的内容', verbose_name='自动保存草稿')),
                ('enable_keyboard_shortcuts', models.BooleanField(default=True, help_text='是否启用键盘快捷键', verbose_name='启用键盘快捷键')),
                ('items_per_page', models.PositiveIntegerField(default=20, help_text='列表页面每页显示的项目数量', verbose_name='每页显示条数')),
                ('custom_settings', models.JSONField(blank=True, default=dict, help_text='用户自定义的其他设置', verbose_name='自定义设置')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_set', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_set', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户偏好',
                'verbose_name_plural': '用户偏好',
                'db_table': 'user_preferences',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='是否激活')),
                ('status', models.CharField(choices=[('active', '激活'), ('inactive', '未激活'), ('pending', '待处理'), ('approved', '已批准'), ('rejected', '已拒绝'), ('suspended', '已暂停')], db_index=True, default='active', max_length=20, verbose_name='状态')),
                ('nickname', models.CharField(blank=True, help_text='用户昵称，支持中文', max_length=50, validators=[base.validators.ChineseNameValidator()], verbose_name='昵称')),
                ('bio', models.TextField(blank=True, help_text='个人简介，最多500字', max_length=500, verbose_name='个人简介')),
                ('avatar', models.ImageField(blank=True, help_text='用户头像，支持jpg、png、gif格式，最大5MB', null=True, upload_to=users.profiles.models.user_avatar_path, validators=[base.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif', 'webp'], allowed_mimes=['image/jpeg', 'image/png', 'image/gif', 'image/webp']), base.validators.FileSizeValidator(max_size=5242880)], verbose_name='头像')),
                ('birth_date', models.DateField(blank=True, help_text='出生日期', null=True, verbose_name='出生日期')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女'), ('other', '其他')], help_text='性别', max_length=10, verbose_name='性别')),
                ('country', models.CharField(blank=True, max_length=50, verbose_name='国家')),
                ('province', models.CharField(blank=True, max_length=50, verbose_name='省份')),
                ('city', models.CharField(blank=True, max_length=50, verbose_name='城市')),
                ('address', models.TextField(blank=True, verbose_name='详细地址')),
                ('website', models.URLField(blank=True, verbose_name='个人网站')),
                ('twitter', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator(message='请输入正确的Twitter链接', regex='^https?://(?:www\\.)?twitter\\.com/[A-Za-z0-9_]+/?$')], verbose_name='Twitter')),
                ('github', models.CharField(blank=True, max_length=100, validators=[django.core.validators.RegexValidator(message='请输入正确的GitHub链接', regex='^https?://(?:www\\.)?github\\.com/[A-Za-z0-9_-]+/?$')], verbose_name='GitHub')),
                ('profile_visibility', models.CharField(choices=[('public', '公开'), ('friends', '仅好友'), ('private', '私密')], default='public', help_text='控制个人资料的可见性', max_length=20, verbose_name='资料可见性')),
                ('show_email', models.BooleanField(default=False, verbose_name='显示邮箱')),
                ('show_phone', models.BooleanField(default=False, verbose_name='显示手机')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_set', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_set', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户资料',
                'verbose_name_plural': '用户资料',
                'db_table': 'user_profiles',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='是否激活')),
                ('status', models.CharField(choices=[('active', '激活'), ('inactive', '未激活'), ('pending', '待处理'), ('approved', '已批准'), ('rejected', '已拒绝'), ('suspended', '已暂停')], db_index=True, default='active', max_length=20, verbose_name='状态')),
                ('currency', models.CharField(choices=[('CNY', '人民币'), ('USD', '美元'), ('EUR', '欧元'), ('GBP', '英镑'), ('JPY', '日元'), ('HKD', '港币'), ('TWD', '台币')], default='CNY', help_text='钱包使用的货币类型', max_length=3, verbose_name='货币类型')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='用户可用余额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.RegexValidator(message='金额格式不正确，最多保留2位小数', regex='^\\d+(\\.\\d{1,2})?$')], verbose_name='可用余额')),
                ('frozen_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='被冻结的余额，不可用于消费', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='冻结余额')),
                ('total_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='历史总收入金额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='总收入')),
                ('total_expense', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='历史总支出金额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='总支出')),
                ('payment_password', models.CharField(blank=True, help_text='用于大额支付的安全密码', max_length=128, verbose_name='支付密码')),
                ('payment_password_set_at', models.DateTimeField(blank=True, help_text='支付密码最后设置时间', null=True, verbose_name='支付密码设置时间')),
                ('wallet_status', models.CharField(choices=[('normal', '正常'), ('frozen', '冻结'), ('suspended', '暂停'), ('closed', '关闭')], default='normal', help_text='钱包的当前状态', max_length=20, verbose_name='钱包状态')),
                ('daily_limit', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), help_text='每日消费限额', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='日限额')),
                ('monthly_limit', models.DecimalField(decimal_places=2, default=Decimal('100000.00'), help_text='每月消费限额', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='月限额')),
                ('is_verified', models.BooleanField(default=False, help_text='钱包是否已完成实名认证', verbose_name='是否已实名认证')),
                ('verified_at', models.DateTimeField(blank=True, help_text='完成实名认证的时间', null=True, verbose_name='认证时间')),
                ('last_transaction_at', models.DateTimeField(blank=True, help_text='最后一次交易的时间', null=True, verbose_name='最后交易时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_set', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_set', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户钱包',
                'verbose_name_plural': '用户钱包',
                'db_table': 'user_wallets',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='更新时间')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='是否激活')),
                ('transaction_type', models.CharField(choices=[('deposit', '充值'), ('withdraw', '提现'), ('transfer_in', '转入'), ('transfer_out', '转出'), ('payment', '支付'), ('refund', '退款'), ('freeze', '冻结'), ('unfreeze', '解冻'), ('freeze_wallet', '冻结钱包'), ('unfreeze_wallet', '解冻钱包'), ('adjustment', '调账'), ('reward', '奖励'), ('penalty', '扣款')], help_text='交易的类型', max_length=20, verbose_name='交易类型')),
                ('amount', models.DecimalField(decimal_places=2, help_text='交易涉及的金额', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='交易金额')),
                ('balance_after', models.DecimalField(decimal_places=2, help_text='交易完成后的钱包余额', max_digits=15, verbose_name='交易后余额')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('processing', '处理中'), ('completed', '已完成'), ('failed', '失败'), ('cancelled', '已取消'), ('refunded', '已退款')], default='completed', help_text='交易的当前状态', max_length=20, verbose_name='交易状态')),
                ('description', models.TextField(blank=True, help_text='交易的详细描述', verbose_name='交易描述')),
                ('source', models.CharField(blank=True, help_text='交易的来源，如支付渠道、转账用户等', max_length=100, verbose_name='交易来源')),
                ('destination', models.CharField(blank=True, help_text='交易的目标，如提现渠道、转账用户等', max_length=100, verbose_name='交易目标')),
                ('reference_id', models.CharField(blank=True, help_text='外部系统的交易ID或订单ID', max_length=100, verbose_name='外部参考ID')),
                ('fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='交易产生的手续费', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='手续费')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='交易相关的附加信息', verbose_name='附加数据')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_set', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_set', to=settings.AUTH_USER_MODEL, verbose_name='更新者')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='users.userwallet', verbose_name='钱包')),
            ],
            options={
                'verbose_name': '钱包交易',
                'verbose_name_plural': '钱包交易',
                'db_table': 'wallet_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['user', 'currency'], name='user_wallet_user_id_270076_idx'),
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['wallet_status'], name='user_wallet_wallet__42ced1_idx'),
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['is_verified'], name='user_wallet_is_veri_5a0994_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['wallet', 'transaction_type'], name='wallet_tran_wallet__023ee0_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['wallet', 'created_at'], name='wallet_tran_wallet__aa27da_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['status'], name='wallet_tran_status_c987ce_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['reference_id'], name='wallet_tran_referen_1f3089_idx'),
        ),
    ]
